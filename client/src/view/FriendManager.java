/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.ClientHandler;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.LinkedList;
import java.util.List;
import java.util.Observable;
import java.util.Observer;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Friend;
import model.RawData;
import resources.Resources;

/**
 *
 * @author Quan
 */
public class FriendManager extends javax.swing.JFrame implements Observer {

    /**
     * Creates new form FriendManager
     */
    private ClientHandler clientHandler;
    private MainChat mainChat;
    private List<Friend> users;
    private DefaultTableModel tmUser;
    
    public FriendManager(MainChat mainChat) {
        initComponents();
        setDefaultCloseOperation(this.DO_NOTHING_ON_CLOSE);
        this.clientHandler = mainChat.clientHandler;
        this.clientHandler.addObserver(this);
        this.mainChat = mainChat;
        this.tmUser = (DefaultTableModel) tbUser.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        searchUserNametxt = new javax.swing.JTextField();
        findUserbtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbUser = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        addFriendBtn = new javax.swing.JButton();
        deteleFriendBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        findUserbtn.setText("Tìm kiếm người dùng");
        findUserbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findUserbtnActionPerformed(evt);
            }
        });

        tbUser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tên", "Trạng thái"
            }
        ));
        jScrollPane1.setViewportView(tbUser);

        jButton2.setText("Lời mời kết bạn");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        addFriendBtn.setText("Thêm bạn");
        addFriendBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFriendBtnActionPerformed(evt);
            }
        });

        deteleFriendBtn.setText("Xoá bạn");
        deteleFriendBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deteleFriendBtnActionPerformed(evt);
            }
        });

        backBtn.setText("Quay lại");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(searchUserNametxt, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(findUserbtn)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addFriendBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(deteleFriendBtn))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchUserNametxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(findUserbtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(addFriendBtn)
                    .addComponent(deteleFriendBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(backBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void findUserbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findUserbtnActionPerformed
        String username = searchUserNametxt.getText();
        if (username.length() == 0) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập tên người dùng");
            return ;
        }
        clientHandler.findUser(username);
    }//GEN-LAST:event_findUserbtnActionPerformed

    private void addFriendBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFriendBtnActionPerformed
        // TODO add your handling code here:
        int row = tbUser.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(this, "Chưa chọn người để kết bạn");
            return ;
        } else {
            Friend f = users.get(row);
            if (f.getStatus().equals(1)) {
                JOptionPane.showMessageDialog(this, "Đã kết bạn rồi");
            } else if (f.getStatus().equals(3)) {
                JOptionPane.showMessageDialog(this, "Đang chờ chấp nhận kết bạn");
            } else {
                clientHandler.addFriend(f);      
            }
        }
    }//GEN-LAST:event_addFriendBtnActionPerformed

    private void deteleFriendBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deteleFriendBtnActionPerformed
        int row = tbUser.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(this, "Chưa chọn người để xoá");
            return ;
        } else {
            Friend f = users.get(row);
            if (!f.getStatus().equals(1)) {
                JOptionPane.showMessageDialog(this, "Chưa là bạn bè");
                return ;
            }
            clientHandler.deleteFriend(f);
        }
    }//GEN-LAST:event_deteleFriendBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        clientHandler.deleteObserver(this);
        mainChat.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_backBtnActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        clientHandler.deleteObserver(this);
        new FriendInvitation(clientHandler).setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addFriendBtn;
    private javax.swing.JButton backBtn;
    private javax.swing.JButton deteleFriendBtn;
    private javax.swing.JButton findUserbtn;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField searchUserNametxt;
    private javax.swing.JTable tbUser;
    // End of variables declaration//GEN-END:variables

    private void updateTableUser() {
        tmUser.setRowCount(0);
        if (users == null) return ;
        for (Friend f : users) {
            tmUser.addRow(f.toFriendManagerObject());
        }
    }
    
    @Override
    public void update(Observable o, Object arg) {
        RawData receiveData = (RawData) arg;
        hanlderResponse(receiveData);
    }

    private void hanlderResponse(RawData receiveData) {
        String code = receiveData.getCode();
        switch(code) {
            case Resources.FIND_USER_RESPONSE:
                Friend[] listUsers = clientHandler.gson.fromJson(receiveData.getData(), Friend[].class);
                users = new LinkedList<>(Arrays.asList(listUsers));
                updateTableUser();
                break;
            case Resources.DEL_FRIEND_RESPONSE:
                JOptionPane.showMessageDialog(this, "Xoá bạn thành công");  
                //Cap nhat Find User Table
                clientHandler.findUser(searchUserNametxt.getText());
                break;
            case Resources.ADD_FRIEND_RESPONSE:
                Friend friend = clientHandler.gson.fromJson(receiveData.getData(), Friend.class);
                if (friend.getStatus().equals(3)) {
                    JOptionPane.showMessageDialog(this, "Gửi lời kết bạn thành công");
                }
                else JOptionPane.showMessageDialog(this, "Kết bạn thành công");
                clientHandler.findUser(searchUserNametxt.getText());
                break;
        }
    }
    
    
}
